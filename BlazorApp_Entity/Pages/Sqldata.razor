@page "/sqldata"
@using BlazorApp_Entity.Data
@inherits Data.SqlConnect
<h3>Sqldata</h3>
<div>
    服务器地址：<input placeholder="服务器地址" @bind-value="Server" />
    数据库名称：<input placeholder="数据库名称" @bind-value="Database" />
</div>
<div>
    Account:<input placeholder="账号" @bind-value="Account" />
    Password:<input placeholder="密码" @bind-value="Password" />
</div>
<button class="btn btn-primary" @onclick="connectionDb">连接数据库</button>
@if (tables == null)
{
    <p><em>请填写数据库信息</em></p>
}
else
{
    <BTable DataSource="tables" Total="tables.Count" @bind-CurrentPage="CurrentPage" PageSize="pageSize" @ref="table">
        <BTableColumns>
            <BTableTemplateColumn Text="操作">
                <BButton Type="@ButtonType.Primary" Size="@ButtonSize.Mini" OnClick="@(e=> ShowDetail(context))">查看详细</BButton>
            </BTableTemplateColumn>
        </BTableColumns>
    </BTable>
}


@code {
    [Parameter]
    public string Server { get; set; } = "LAPTOP-FG0SOM1N";
    [Parameter]
    public string Account { get; set; } = "sa";
    [Parameter]
    public string Password { get; set; } = "123";
    [Parameter]
    public string Database { get; set; } = "test";
    [Inject]
    MessageService MessageService { get; set; }

    public void connectionDb()
    {

        tables = GetDatabaseList(new ConnectionInfo { Account = Account, Server = Server, Database = Database, Pwd = Password });
    }

    protected override void OnInitialized()
    {
        tables = new List<TableInfo>();
    }
    public async Task ShowDetail(object testData)
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("TableName", ((TableInfo)testData).TableName);
        parameters.Add("DBServer", DBServer);
        var result = await _DialogService.ShowDialogAsync<Property>("表详细属性", parameters);
        MessageService.Show(result.ToString());
    }
}
